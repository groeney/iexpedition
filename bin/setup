#!/bin/sh

# Set up Rails app. Run this script immediately after cloning the codebase.

# Exit if any subcommand fails
set -e

# Set up Ruby dependencies via Bundler
echo "== Installing dependencies =="
gem install bundler --conservative
bundle check || bundle install

# Some gem dependecies we can take care of with brew
if [[ $OSTYPE == darwin* ]]; then
  brew update
  which -s postgres || brew install postgres
fi

if ! which -s postgres; then
  echo "You must install postgres onto this system"
fi

# Set up database and add any development seed data
echo "\n== Preparing database =="
bin/seed_db example
echo "\nDatabase seeded! Check log/seed.log and log/seed_errors.log for further info"

# Clean out any old log/tmp files
echo "\n== Removing old logs and tempfiles =="
bin/rails log:clear tmp:clear

# Add binstubs to PATH via export PATH=".git/safe/../../bin:$PATH" in ~/.zshenv
mkdir -p .git/safe

echo "\n== Heroku and git setup =="
if heroku join --app iexpedition-staging > /dev/null 2>&1; then
  git remote add staging git@heroku.com:iexpedition-staging.git || true
  printf "You are a collaborator on the 'iexpedition-staging' Heroku app
"
else
  printf "Ask for access to the iexpedition heroku team and the 'iexpedition-staging' Heroku app
"
fi

if heroku join --app iexpedition-production > /dev/null 2>&1; then
  git remote add production git@heroku.com:iexpedition-production.git || true
  printf "You are a collaborator on the 'iexpedition-production' Heroku app"
else
  printf "Ask for access to the iexpedition heroku team and the 'iexpedition-production' Heroku app"
fi

git config heroku.remote staging
